<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="20" passed="16" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-08-13T16:10:11Z" name="PrestashopTest" finished-at="2019-08-13T16:11:34Z" duration-ms="82588">
    <groups>
    </groups>
    <test started-at="2019-08-13T16:10:11Z" name="Currency TEst" finished-at="2019-08-13T16:10:44Z" duration-ms="32552">
      <class name="test.AllureTestCurrency">
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.AllureTestCurrency@189b5fb1]" started-at="2019-08-13T16:10:11Z" name="setUp" finished-at="2019-08-13T16:10:16Z" duration-ms="5021" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.AllureTestCurrency@189b5fb1]" started-at="2019-08-13T16:10:16Z" name="beforeMethod" finished-at="2019-08-13T16:10:19Z" duration-ms="2423" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="checkCurrency(data.Currencies, java.lang.String)[pri:1, instance:test.AllureTestCurrency@189b5fb1]" started-at="2019-08-13T16:10:19Z" name="checkCurrency" data-provider="currencyData" finished-at="2019-08-13T16:10:21Z" duration-ms="2596" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Euro]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Euro]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCurrency -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.AllureTestCurrency@189b5fb1]" started-at="2019-08-13T16:10:21Z" name="afterMethod" finished-at="2019-08-13T16:10:21Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCurrency status=SUCCESS method=AllureTestCurrency.checkCurrency(data.Currencies, java.lang.String)[pri:1, instance:test.AllureTestCurrency@189b5fb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.AllureTestCurrency@189b5fb1]" started-at="2019-08-13T16:10:21Z" name="beforeMethod" finished-at="2019-08-13T16:10:22Z" duration-ms="365" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="checkCurrency(data.Currencies, java.lang.String)[pri:1, instance:test.AllureTestCurrency@189b5fb1]" started-at="2019-08-13T16:10:22Z" name="checkCurrency" data-provider="currencyData" finished-at="2019-08-13T16:10:24Z" duration-ms="2035" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ukrainian Hryvnia]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ukrainian Hryvnia]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCurrency -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.AllureTestCurrency@189b5fb1]" started-at="2019-08-13T16:10:24Z" name="afterMethod" finished-at="2019-08-13T16:10:24Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCurrency status=SUCCESS method=AllureTestCurrency.checkCurrency(data.Currencies, java.lang.String)[pri:1, instance:test.AllureTestCurrency@189b5fb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.AllureTestCurrency@189b5fb1]" started-at="2019-08-13T16:10:24Z" name="beforeMethod" finished-at="2019-08-13T16:10:24Z" duration-ms="317" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="checkCurrency(data.Currencies, java.lang.String)[pri:1, instance:test.AllureTestCurrency@189b5fb1]" started-at="2019-08-13T16:10:24Z" name="checkCurrency" data-provider="currencyData" finished-at="2019-08-13T16:10:26Z" duration-ms="1986" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[US DOLLAR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[US Dollar]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCurrency -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.AllureTestCurrency@189b5fb1]" started-at="2019-08-13T16:10:26Z" name="afterMethod" finished-at="2019-08-13T16:10:26Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCurrency status=SUCCESS method=AllureTestCurrency.checkCurrency(data.Currencies, java.lang.String)[pri:1, instance:test.AllureTestCurrency@189b5fb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.AllureTestCurrency@189b5fb1]" started-at="2019-08-13T16:10:26Z" name="beforeMethod" finished-at="2019-08-13T16:10:27Z" duration-ms="352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="checkCurrencyForOneElement()[pri:2, instance:test.AllureTestCurrency@189b5fb1]" started-at="2019-08-13T16:10:27Z" name="checkCurrencyForOneElement" finished-at="2019-08-13T16:10:31Z" duration-ms="3986" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCurrencyForOneElement -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.AllureTestCurrency@189b5fb1]" started-at="2019-08-13T16:10:31Z" name="afterMethod" finished-at="2019-08-13T16:10:31Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCurrencyForOneElement status=SUCCESS method=AllureTestCurrency.checkCurrencyForOneElement()[pri:2, instance:test.AllureTestCurrency@189b5fb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.AllureTestCurrency@189b5fb1]" started-at="2019-08-13T16:10:31Z" name="beforeMethod" finished-at="2019-08-13T16:10:31Z" duration-ms="310" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="checkExchangeCurrencyUsdToUa()[pri:3, instance:test.AllureTestCurrency@189b5fb1]" started-at="2019-08-13T16:10:31Z" name="checkExchangeCurrencyUsdToUa" finished-at="2019-08-13T16:10:36Z" duration-ms="5023" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [495.21] but found [544.92]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [495.21] but found [544.92]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:442)
at test.AllureTestCurrency.checkExchangeCurrencyUsdToUa(AllureTestCurrency.java:85)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkExchangeCurrencyUsdToUa -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.AllureTestCurrency@189b5fb1]" started-at="2019-08-13T16:10:36Z" name="afterMethod" finished-at="2019-08-13T16:10:36Z" duration-ms="331" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkExchangeCurrencyUsdToUa status=FAILURE method=AllureTestCurrency.checkExchangeCurrencyUsdToUa()[pri:3, instance:test.AllureTestCurrency@189b5fb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.AllureTestCurrency@189b5fb1]" started-at="2019-08-13T16:10:36Z" name="beforeMethod" finished-at="2019-08-13T16:10:37Z" duration-ms="331" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="checkExchangeCurrencyUsdToEu()[pri:4, instance:test.AllureTestCurrency@189b5fb1]" started-at="2019-08-13T16:10:37Z" name="checkExchangeCurrencyUsdToEu" finished-at="2019-08-13T16:10:43Z" duration-ms="6185" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [15.3] but found [0.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [15.3] but found [0.0]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:442)
at test.AllureTestCurrency.checkExchangeCurrencyUsdToEu(AllureTestCurrency.java:114)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkExchangeCurrencyUsdToEu -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.AllureTestCurrency@189b5fb1]" started-at="2019-08-13T16:10:43Z" name="afterMethod" finished-at="2019-08-13T16:10:43Z" duration-ms="311" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkExchangeCurrencyUsdToEu status=FAILURE method=AllureTestCurrency.checkExchangeCurrencyUsdToEu()[pri:4, instance:test.AllureTestCurrency@189b5fb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.AllureTestCurrency@189b5fb1]" started-at="2019-08-13T16:10:43Z" name="tearDown" finished-at="2019-08-13T16:10:44Z" duration-ms="587" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.AllureTestCurrency -->
    </test> <!-- Currency TEst -->
    <test started-at="2019-08-13T16:10:44Z" name="Search Test" finished-at="2019-08-13T16:10:55Z" duration-ms="11378">
      <class name="test.TestSearch">
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.TestSearch@77ee25f1]" started-at="2019-08-13T16:10:44Z" name="setUp" finished-at="2019-08-13T16:10:47Z" duration-ms="3317" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.TestSearch@77ee25f1]" started-at="2019-08-13T16:10:47Z" name="beforeMethod" finished-at="2019-08-13T16:10:49Z" duration-ms="2342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TestElementsInSearch()[pri:0, instance:test.TestSearch@77ee25f1]" started-at="2019-08-13T16:10:49Z" name="TestElementsInSearch" finished-at="2019-08-13T16:10:50Z" duration-ms="800" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestElementsInSearch -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.TestSearch@77ee25f1]" started-at="2019-08-13T16:10:50Z" name="afterMethod" finished-at="2019-08-13T16:10:50Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestElementsInSearch status=SUCCESS method=TestSearch.TestElementsInSearch()[pri:0, instance:test.TestSearch@77ee25f1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.TestSearch@77ee25f1]" started-at="2019-08-13T16:10:50Z" name="beforeMethod" finished-at="2019-08-13T16:10:51Z" duration-ms="352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TestEmptyPage()[pri:0, instance:test.TestSearch@77ee25f1]" started-at="2019-08-13T16:10:51Z" name="TestEmptyPage" finished-at="2019-08-13T16:10:51Z" duration-ms="493" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestEmptyPage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.TestSearch@77ee25f1]" started-at="2019-08-13T16:10:51Z" name="afterMethod" finished-at="2019-08-13T16:10:51Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestEmptyPage status=SUCCESS method=TestSearch.TestEmptyPage()[pri:0, instance:test.TestSearch@77ee25f1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.TestSearch@77ee25f1]" started-at="2019-08-13T16:10:51Z" name="beforeMethod" finished-at="2019-08-13T16:10:51Z" duration-ms="308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TestSearchResultSortAZ()[pri:0, instance:test.TestSearch@77ee25f1]" started-at="2019-08-13T16:10:51Z" name="TestSearchResultSortAZ" finished-at="2019-08-13T16:10:52Z" duration-ms="759" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestSearchResultSortAZ -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.TestSearch@77ee25f1]" started-at="2019-08-13T16:10:52Z" name="afterMethod" finished-at="2019-08-13T16:10:52Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestSearchResultSortAZ status=SUCCESS method=TestSearch.TestSearchResultSortAZ()[pri:0, instance:test.TestSearch@77ee25f1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.TestSearch@77ee25f1]" started-at="2019-08-13T16:10:52Z" name="beforeMethod" finished-at="2019-08-13T16:10:52Z" duration-ms="329" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TestSearchResultSortAZNotWork()[pri:0, instance:test.TestSearch@77ee25f1]" started-at="2019-08-13T16:10:52Z" name="TestSearchResultSortAZNotWork" finished-at="2019-08-13T16:10:53Z" duration-ms="789" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Lists differ at element [0]: Customizable Mug != Pack Mug + Framed Poster expected [Customizable Mug] but found [Pack Mug + Framed Poster]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Lists differ at element [0]: Customizable Mug != Pack Mug + Framed Poster expected [Customizable Mug] but found [Pack Mug + Framed Poster]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:831)
at org.testng.Assert.assertEquals(Assert.java:796)
at test.TestSearch.TestSearchResultSortAZNotWork(TestSearch.java:144)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestSearchResultSortAZNotWork -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.TestSearch@77ee25f1]" started-at="2019-08-13T16:10:53Z" name="afterMethod" finished-at="2019-08-13T16:10:54Z" duration-ms="314" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestSearchResultSortAZNotWork status=FAILURE method=TestSearch.TestSearchResultSortAZNotWork()[pri:0, instance:test.TestSearch@77ee25f1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.TestSearch@77ee25f1]" started-at="2019-08-13T16:10:54Z" name="beforeMethod" finished-at="2019-08-13T16:10:54Z" duration-ms="305" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TetsAfterSearch()[pri:0, instance:test.TestSearch@77ee25f1]" started-at="2019-08-13T16:10:54Z" name="TetsAfterSearch" finished-at="2019-08-13T16:10:55Z" duration-ms="659" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TetsAfterSearch -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.TestSearch@77ee25f1]" started-at="2019-08-13T16:10:55Z" name="afterMethod" finished-at="2019-08-13T16:10:55Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TetsAfterSearch status=SUCCESS method=TestSearch.TetsAfterSearch()[pri:0, instance:test.TestSearch@77ee25f1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.TestSearch@77ee25f1]" started-at="2019-08-13T16:10:55Z" name="tearDown" finished-at="2019-08-13T16:10:55Z" duration-ms="583" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.TestSearch -->
    </test> <!-- Search Test -->
    <test started-at="2019-08-13T16:10:55Z" name="Horizontal And Vertical Menu Test" finished-at="2019-08-13T16:11:09Z" duration-ms="13598">
      <class name="test.HorizontalAndVerticalTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.HorizontalAndVerticalTest@6050462a]" started-at="2019-08-13T16:10:55Z" name="setUp" finished-at="2019-08-13T16:10:58Z" duration-ms="3251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.HorizontalAndVerticalTest@6050462a]" started-at="2019-08-13T16:10:58Z" name="beforeMethod" finished-at="2019-08-13T16:11:00Z" duration-ms="2056" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:test.HorizontalAndVerticalTest@6050462a]" started-at="2019-08-13T16:11:00Z" name="init" finished-at="2019-08-13T16:11:01Z" duration-ms="292" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="checkClothes()[pri:1, instance:test.HorizontalAndVerticalTest@6050462a]" started-at="2019-08-13T16:11:01Z" name="checkClothes" finished-at="2019-08-13T16:11:02Z" duration-ms="1055" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkClothes -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.HorizontalAndVerticalTest@6050462a]" started-at="2019-08-13T16:11:02Z" name="afterMethod" finished-at="2019-08-13T16:11:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkClothes status=SUCCESS method=HorizontalAndVerticalTest.checkClothes()[pri:1, instance:test.HorizontalAndVerticalTest@6050462a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.HorizontalAndVerticalTest@6050462a]" started-at="2019-08-13T16:11:02Z" name="beforeMethod" finished-at="2019-08-13T16:11:02Z" duration-ms="319" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:test.HorizontalAndVerticalTest@6050462a]" started-at="2019-08-13T16:11:02Z" name="init" finished-at="2019-08-13T16:11:02Z" duration-ms="215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="checkMenClothes()[pri:2, instance:test.HorizontalAndVerticalTest@6050462a]" started-at="2019-08-13T16:11:02Z" name="checkMenClothes" finished-at="2019-08-13T16:11:04Z" duration-ms="1665" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkMenClothes -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.HorizontalAndVerticalTest@6050462a]" started-at="2019-08-13T16:11:04Z" name="afterMethod" finished-at="2019-08-13T16:11:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkMenClothes status=SUCCESS method=HorizontalAndVerticalTest.checkMenClothes()[pri:2, instance:test.HorizontalAndVerticalTest@6050462a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.HorizontalAndVerticalTest@6050462a]" started-at="2019-08-13T16:11:04Z" name="beforeMethod" finished-at="2019-08-13T16:11:04Z" duration-ms="296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:test.HorizontalAndVerticalTest@6050462a]" started-at="2019-08-13T16:11:04Z" name="init" finished-at="2019-08-13T16:11:05Z" duration-ms="240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="checkAccessories()[pri:3, instance:test.HorizontalAndVerticalTest@6050462a]" started-at="2019-08-13T16:11:05Z" name="checkAccessories" finished-at="2019-08-13T16:11:05Z" duration-ms="820" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAccessories -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.HorizontalAndVerticalTest@6050462a]" started-at="2019-08-13T16:11:05Z" name="afterMethod" finished-at="2019-08-13T16:11:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAccessories status=SUCCESS method=HorizontalAndVerticalTest.checkAccessories()[pri:3, instance:test.HorizontalAndVerticalTest@6050462a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.HorizontalAndVerticalTest@6050462a]" started-at="2019-08-13T16:11:05Z" name="beforeMethod" finished-at="2019-08-13T16:11:06Z" duration-ms="311" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:test.HorizontalAndVerticalTest@6050462a]" started-at="2019-08-13T16:11:06Z" name="init" finished-at="2019-08-13T16:11:06Z" duration-ms="240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="checkStationeryAccessories()[pri:4, instance:test.HorizontalAndVerticalTest@6050462a]" started-at="2019-08-13T16:11:06Z" name="checkStationeryAccessories" finished-at="2019-08-13T16:11:07Z" duration-ms="626" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStationeryAccessories -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.HorizontalAndVerticalTest@6050462a]" started-at="2019-08-13T16:11:07Z" name="afterMethod" finished-at="2019-08-13T16:11:07Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStationeryAccessories status=SUCCESS method=HorizontalAndVerticalTest.checkStationeryAccessories()[pri:4, instance:test.HorizontalAndVerticalTest@6050462a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.HorizontalAndVerticalTest@6050462a]" started-at="2019-08-13T16:11:07Z" name="beforeMethod" finished-at="2019-08-13T16:11:07Z" duration-ms="328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="init()[pri:0, instance:test.HorizontalAndVerticalTest@6050462a]" started-at="2019-08-13T16:11:07Z" name="init" finished-at="2019-08-13T16:11:07Z" duration-ms="219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="checkArt()[pri:5, instance:test.HorizontalAndVerticalTest@6050462a]" started-at="2019-08-13T16:11:07Z" name="checkArt" finished-at="2019-08-13T16:11:08Z" duration-ms="914" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkArt -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.HorizontalAndVerticalTest@6050462a]" started-at="2019-08-13T16:11:08Z" name="afterMethod" finished-at="2019-08-13T16:11:08Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkArt status=SUCCESS method=HorizontalAndVerticalTest.checkArt()[pri:5, instance:test.HorizontalAndVerticalTest@6050462a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.HorizontalAndVerticalTest@6050462a]" started-at="2019-08-13T16:11:08Z" name="tearDown" finished-at="2019-08-13T16:11:09Z" duration-ms="714" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.HorizontalAndVerticalTest -->
    </test> <!-- Horizontal And Vertical Menu Test -->
    <test started-at="2019-08-13T16:11:09Z" name="Cart Functional Test" finished-at="2019-08-13T16:11:34Z" duration-ms="24989">
      <class name="test.TestCartFunctional">
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.TestCartFunctional@34523d46]" started-at="2019-08-13T16:11:09Z" name="setUp" finished-at="2019-08-13T16:11:12Z" duration-ms="3298" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.TestCartFunctional@34523d46]" started-at="2019-08-13T16:11:12Z" name="beforeMethod" finished-at="2019-08-13T16:11:15Z" duration-ms="2586" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addProductToCart()[pri:0, instance:test.TestCartFunctional@34523d46]" started-at="2019-08-13T16:11:15Z" name="addProductToCart" finished-at="2019-08-13T16:11:18Z" duration-ms="3151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addProductToCart -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.TestCartFunctional@34523d46]" started-at="2019-08-13T16:11:18Z" name="afterMethod" finished-at="2019-08-13T16:11:18Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addProductToCart status=SUCCESS method=TestCartFunctional.addProductToCart()[pri:0, instance:test.TestCartFunctional@34523d46] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.TestCartFunctional@34523d46]" started-at="2019-08-13T16:11:18Z" name="beforeMethod" finished-at="2019-08-13T16:11:18Z" duration-ms="350" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="deleteProductFromShoppingCart()[pri:0, instance:test.TestCartFunctional@34523d46]" started-at="2019-08-13T16:11:18Z" name="deleteProductFromShoppingCart" finished-at="2019-08-13T16:11:23Z" duration-ms="4755" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteProductFromShoppingCart -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.TestCartFunctional@34523d46]" started-at="2019-08-13T16:11:23Z" name="afterMethod" finished-at="2019-08-13T16:11:23Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteProductFromShoppingCart status=SUCCESS method=TestCartFunctional.deleteProductFromShoppingCart()[pri:0, instance:test.TestCartFunctional@34523d46] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.TestCartFunctional@34523d46]" started-at="2019-08-13T16:11:23Z" name="beforeMethod" finished-at="2019-08-13T16:11:23Z" duration-ms="525" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="priceProductFromShoppingCart()[pri:0, instance:test.TestCartFunctional@34523d46]" started-at="2019-08-13T16:11:23Z" name="priceProductFromShoppingCart" finished-at="2019-08-13T16:11:30Z" duration-ms="6233" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- priceProductFromShoppingCart -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.TestCartFunctional@34523d46]" started-at="2019-08-13T16:11:30Z" name="afterMethod" finished-at="2019-08-13T16:11:30Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=priceProductFromShoppingCart status=SUCCESS method=TestCartFunctional.priceProductFromShoppingCart()[pri:0, instance:test.TestCartFunctional@34523d46] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.TestCartFunctional@34523d46]" started-at="2019-08-13T16:11:30Z" name="beforeMethod" finished-at="2019-08-13T16:11:30Z" duration-ms="350" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="wrongAddProductToCart()[pri:0, instance:test.TestCartFunctional@34523d46]" started-at="2019-08-13T16:11:30Z" name="wrongAddProductToCart" finished-at="2019-08-13T16:11:33Z" duration-ms="2813" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at test.TestCartFunctional.wrongAddProductToCart(TestCartFunctional.java:84)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongAddProductToCart -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.TestCartFunctional@34523d46]" started-at="2019-08-13T16:11:33Z" name="afterMethod" finished-at="2019-08-13T16:11:33Z" duration-ms="295" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wrongAddProductToCart status=FAILURE method=TestCartFunctional.wrongAddProductToCart()[pri:0, instance:test.TestCartFunctional@34523d46] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.TestCartFunctional@34523d46]" started-at="2019-08-13T16:11:33Z" name="tearDown" finished-at="2019-08-13T16:11:34Z" duration-ms="615" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.TestCartFunctional -->
    </test> <!-- Cart Functional Test -->
  </suite> <!-- PrestashopTest -->
</testng-results>
